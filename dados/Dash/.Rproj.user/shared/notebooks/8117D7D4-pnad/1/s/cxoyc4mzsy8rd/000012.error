{"frames":[{"func":"with_progress({\n    p <- progressor(along = anos)\n    res1 <- future_lapply(seq_along(anos), function(i) {\n        calcula_media(dados[[i]]) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers({\n    res <- withVisible(expr)\n}, progression = function(p) {\n    progression_counter <<- progression_counter + 1 ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withVisible(expr)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"res1 <- future_lapply(seq_along(anos), function(i) {\n    calcula_media(dados[[i]])\n  })","file":"","line_number":4,"end_line_number":6,"character_number":3,"end_character_number":4},{"func":"future_xapply(FUN = FUN, nX = nX, chunk_args = X, args = list(...), \n    get_chunk = `chunkWith[[`, expr = expr, envir = envir, future.envir = future.envir, \n    future.globals = future.globals, future.packages = future.packages, \n    future.scheduling = future.scheduling, future.chunk.size = future.chunk.size,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"future(expr, substitute = FALSE, envir = future.envir, stdout = future.stdout, \n    conditions = future.conditions, globals = globals_ii, packages = packages_ii, \n    seed = future.seed, label = labels[ii])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"run(future)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"run.Future(future)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"run(future)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"run.ClusterFuture(future)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cluster_call(cl, fun = grmall, future = future, when = \"call grmall() on\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch({\n    clusterCall(cl = cl, ...)\n}, error = function(ex) {\n    msg <- post_mortem_cluster_failure(ex, when = when, node = node,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"value[[3L]](cond)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(ex)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Erro: MultisessionFuture (future_lapply-1) failed to call grmall() on cluster RichSOCKnode #3 (PID 21656 on localhost ‘localhost’). The reason reported was ‘erro ao escrever na conexão’. Post-mortem diagnostic: Failed to determined whether a process with this PID exists or not, i.e. cannot infer whether localhost worker is alive or not. The total size of the 9 globals exported is 3.77 GiB. The three largest globals are ‘dados’ (3.77 GiB of class ‘list’), ‘update’ (9.57 KiB of class ‘function’) and ‘calcula_media’ (3.83 KiB of class ‘function’)\n"}