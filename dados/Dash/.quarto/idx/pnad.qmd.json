{"title":"PNADc - Renda","markdown":{"yaml":{"title":"PNADc - Renda","format":{"html":{"theme":"cosmo","toc":true,"number-sections":true}}},"headingText":"Análises de Renda no Brasil pela PNAD Contínua Anual (2022-2024)","containsRefs":false,"markdown":"\n\n\n## Código\n\n### Pacotes Utilizados\n\n```{r packages, echo = TRUE, warning = FALSE, message = FALSE, results = 'hide'}\nlapply(list(\"survey\", \"tidyverse\", \"PNADcIBGE\", \"future\", \"future.apply\", \"progressr\", \"data.table\", \"patchwork\", \"kableExtra\"), function(x) {library(x, character.only = TRUE)})\n\n```\n\n```{r preparation, include = FALSE}\n# plan(multisession, workers = 9)\n# handlers(\"beepr\", \"txtprogressbar\")\n\nanos <- 2022:2024\n\nvariaveis_renomeadas <- c(\n  Ano = \"Ano\",\n  UF = \"UF\",\n  V1008 = \"domicílio\", \n  V1014 = \"entrevista\",\n  V1023 = \"tipo\", \n  #V1028 = \"peso\",\n  V1032 = \"peso\",\n  V2001 = \"número_pessoas\", \n  V2003 = \"indivíduo\", \n  V2005 = \"condição\",\n  V2007 = \"sexo\",\n  V20081 = \"mês_nascimento\", \n  V2009 = \"idade\", \n  V2010 = \"cor_raça\", \n  VD3004 = \"nível_instrução\", \n  VD3005 = \"anos_estudo\", \n  V4009 = \"numero_trabalhos\",\n  V4039 = \"horas_trabalho_principal\",\n  V4040 = \"tempo_trabalho_principal\",\n  V40401 = \"tempo_trabalho_principal.1\",\n  V40402 = \"tempo_trabalho_principal.2\",\n  V40403 = \"tempo_trabalho_principal.3\",\n  VD4008 = \"posição_trabalho_principal\",\n  VD4013 = \"horas_trabalhadas_faixa\",\n  VD4019 = \"rendimento_habitual\",\n  VD4031 = \"horas_trabalhadas\",\n  VD5010 = \"rendimento_habitual_domicilio\"\n)\n```\n\n### Variáveis\n\n```{r variables}\n\nvariaveis <- c(\"Ano\", \"UF\", \"V1008\", \"V1014\", \"V1023\", \"V1032\", \n               \"V2001\", \"V2003\", \"V2005\", \"V2007\", \"V20081\", \"V2009\", \"V2010\", \n               \"VD3004\", \"VD3005\", \n               \"V4009\", \"V4039\", \"V4040\", \"V40401\", \"V40402\", \"V40403\", \"VD4008\", \"VD4013\", \"VD4019\", \"VD4031\", \n               \"VD5010\") \n```\n\n### Funções\n\n```{r function}\ncarregar_dados <- function(ano) {\n  get_pnadc(year = ano, interview = 1, vars = variaveis, defyear = 2024)\n}\n\ncalcula_media <- function(design) {\n  design <- subset(design, cor_raça != \"Ignorado\")\n  \n  design <- update(design, \n                   Renda_dom = rendimento_habitual_domicilio * CO2,\n                   Renda = rendimento_habitual * CO2) \n  \n  renda_ano <- svyby(\n    formula = ~Renda,\n    by = ~interaction(sexo, cor_raça),  \n    design = design,\n    FUN = svymean,\n    na.rm = TRUE\n  )\n  \n  renda_ano <- renda_ano %>%\n    rename(Categoria = `interaction(sexo, cor_raça)`) %>%\n    mutate(Categoria = as.character(Categoria))\n  \n  renda_media <- svymean(x = ~Renda, design = design, na.rm = TRUE)\n  \n  renda_geral <- data.frame(\"Geral\", coef(renda_media), SE(renda_media))\n  colnames(renda_geral) <- colnames(renda_ano)  # garante consistência\n  \n  renda_ano <- rbind(renda_ano, renda_geral)\n  rownames(renda_ano) <- NULL\n  gc()\n  return(renda_ano)\n}\n\ncalcula_quartil <- function(dados) {\n  dado <- dados\n  dado <- subset(dado, !is.na(rendimento_habitual) & !is.na(sexo) & cor_raça != \"Ignorado\")\n  \n  dado <- transform(\n    dado,\n    Renda = rendimento_habitual * CO2, \n    Renda_dom = rendimento_habitual_domicilio * CO2, \n    Categoria = interaction(sexo, cor_raça)\n  )\n  \n  quartis <- svyby(\n    ~Renda,                      \n    ~Categoria,                      \n    dado,                       \n    FUN = svyquantile,            \n    quantiles = c(0.25, 0.5, 0.75)\n  )\n  \n  dado_df <- as.data.frame(dado$variables)\n  dado_df <- left_join(dado_df, quartis, by = \"Categoria\")\n  \n  quartil_geral <- svyquantile(\n    x = ~Renda, \n    design = dado, \n    quantiles = c(0.25, 0.5, 0.75), \n    ci = FALSE\n  )\n  quartil_geral <- as.data.frame(quartil_geral[[\"Renda\"]])\n  \n  renda_media <- svymean(~Renda, dado) \n  \n  dado_df <- dado_df %>%\n    select(Categoria, Renda, Renda.0.25, Renda.0.5, Renda.0.75) %>%\n    mutate(Categoria = as.character(Categoria))\n  \n  media_geral <- data.frame(\n    Categoria = \"Geral\",\n    Renda = as.numeric(renda_media[\"Renda\"]),\n    Renda.0.25 = as.numeric(quartil_geral[1]),\n    Renda.0.5 = as.numeric(quartil_geral[2]),\n    Renda.0.75 = as.numeric(quartil_geral[3]),\n    Quartil = case_when(\n      as.numeric(renda_media[\"Renda\"]) <= as.numeric(quartil_geral[1]) ~ \"Q4\",\n      as.numeric(renda_media[\"Renda\"]) <= as.numeric(quartil_geral[2]) ~ \"Q3\",\n      as.numeric(renda_media[\"Renda\"]) <= as.numeric(quartil_geral[3]) ~ \"Q2\",\n      TRUE ~ \"Q1\"\n    )\n  )\n  \n  dado_df$Categoria <- factor(dado_df$Categoria)\n  \n  dado_df <- dado_df %>%\n    mutate(\n      Quartil = case_when(\n        Renda <= Renda.0.25 ~ \"Q4\",            \n        Renda <= Renda.0.5  ~ \"Q3\",            \n        Renda <= Renda.0.75 ~ \"Q2\",            \n        TRUE                ~ \"Q1\"\n      )\n    )\n  \n  dado_df <- full_join(dado_df, media_geral)\n  \n  dado_df$Renda <- as.numeric(dado_df$Renda)\n  \n  resultado <- dado_df %>%\n    group_by(Categoria, Quartil) %>% \n    summarize(Media_Renda = mean(Renda)) %>%\n    mutate(Quartil_Geral = case_when(\n      Media_Renda <= as.numeric(quartil_geral[1]) ~ \"q4\",            \n      Media_Renda <= as.numeric(quartil_geral[2]) ~ \"q3\",            \n      Media_Renda <= as.numeric(quartil_geral[3]) ~ \"q2\",            \n      TRUE ~ \"q1\"\n    ))\n  \n  return(resultado)\n}\n\n# Função para reordenar categorias condicionalmente após pivot_wider\npivot_reorder <- function(data, ano, variavel, categoria, valor, vars_to_reorder, decrescente = TRUE) {\n  \n  ultimo_ano <- as.character(max(as.numeric(pull(data, {{ano}})), na.rm = TRUE))\n  var_levels <- data %>% pull({{variavel}}) %>% unique()\n  \n  data %>%\n    mutate(\n      {{categoria}} := as.character({{categoria}})\n    ) %>%\n    pivot_wider(\n      names_from = {{ano}},\n      values_from = {{valor}}\n    ) %>%\n    group_by({{variavel}}) %>%\n    mutate(\n      {{categoria}} := if (first({{variavel}}) %in% vars_to_reorder) {\n        fct_reorder(\n          .data[[as.character(rlang::ensym(categoria))]],\n          as.numeric(.data[[ultimo_ano]]),\n          .desc = decrescente\n        )\n      } else {\n        factor(\n          .data[[as.character(rlang::ensym(categoria))]],\n          levels = unique(.data[[as.character(rlang::ensym(categoria))]])\n        )\n      }\n    ) %>%\n    ungroup() %>%\n    arrange(\n      factor(.data[[as.character(rlang::ensym(variavel))]], levels = var_levels),\n      .data[[as.character(rlang::ensym(categoria))]]\n    )\n}\n```\n\n```{r treatment, eval = FALSE, include = FALSE}\n\n# CARREGAR DADOS\n\noptions(future.globals.maxSize = 15e+09)  # Define o limite para 15 GB\n\nwith_progress({\n  p <- progressor(along = anos)\n  \n  dados <- future_lapply(anos, function(ano) {\n    p()\n    carregar_dados(ano)\n  })\n  names(dados) <- paste0(\"ano\", anos)\n})\n\ngc()\n\n# Nomear variáveis de interesse\nfor (i in seq_along(dados)) {\n  for (variavel in names(variaveis_renomeadas)) {\n    names(dados[[i]]$variables)[names(dados[[i]]$variables) == variavel] <- variaveis_renomeadas[[variavel]]\n  }\n}\n\ndados_df <- bind_rows(lapply(dados, function(x) x$variables))\n\ndados_df <- dados_df %>% \n  select(all_of(unname(variaveis_renomeadas))) %>% \n  mutate(ID = paste(Ano, domicílio, indivíduo, sep = \"_\"))\n\n# CATEGORIAS\n\nwith_progress({\n  p <- progressor(along = anos)\n  \n  res1 <- future_lapply(seq_along(anos), function(i) {\n    calcula_media(dados[[i]])\n  })\n})\n\ngc()\n\ndata <- res1 %>%\n  bind_rows(.id = \"Ano\") %>%\n  mutate(Ano = anos[as.integer(Ano)])\n\n# QUARTIS\n\nwith_progress({\n  p <- progressor(along = seq_along(dados))\n  \n  res2 <- future_lapply(seq_along(dados), function(i) {\n    p()\n    calcula_quartil(dados[[i]])\n  })\n})\n\ndata2 <- res2 %>%\n  bind_rows(.id = \"Ano\")%>%\n  mutate(Ano = anos[as.integer(Ano)])\n\ndata$Renda <- round(as.numeric(data$Renda), 2)\ndata2$Media_Renda <- round(data2$Media_Renda, 2)\n```\n\n```{r data, include = FALSE}\n# SALVAR E CARREGAR DADOS\n\n# save(list = ls(), file = \"C:/Users/leona/OneDrive/Imagens/Documentos/GitHub/projetos/dados/saidas/dados_pnad.RData\")\n load(\"C:/Users/leona/OneDrive/Imagens/Documentos/GitHub/projetos/dados/saidas/dados_pnad.RData\")\n\n# write.csv2(dados_df, \"C:/Users/leona/OneDrive/Imagens/Documentos/GitHub/projetos/dados/saidas/dados_pnad.csv\", row.names = FALSE)\n```\n\n## Gráficos\n\n```{r graphics, include = FALSE}\n\ngrafico_categoria1 <- ggplot(data, aes(x = Ano, y = Renda, color = Categoria)) +\n  geom_line(aes(size = ifelse(Categoria == \"Geral\", 2, .6))) +\n  geom_point() +\n  labs(x = NULL, y = \"Renda Média\", title = \"Renda Média no Brasil por Cor e Sexo (1)\") +\n  scale_size_identity() + \n  scale_x_continuous(n.breaks = 3) +\n  theme_minimal()\n\ngrafico_categoria2 <- ggplot(data, aes(x = Ano, y = Renda)) +\n  geom_line() +\n  geom_point() +\n  geom_errorbar(aes(ymin = Renda - se, ymax = Renda + se), width = 0.2) +\n  facet_wrap(~Categoria) +\n  labs(x = NULL, y = \"Renda Média\", title = \"Renda Média no Brasil por Cor e Sexo (2)\") +\n  scale_x_continuous(n.breaks = 3) +\n  theme_bw() + theme(legend.position = \"none\")\n\n\ncategorias <- c(\"Homem.Branca\", \"Homem.Parda\", \"Homem.Preta\", \n                \"Mulher.Branca\", \"Mulher.Parda\", \"Mulher.Preta\")\n\ncores_quartil <- c(\"Q1\" = \"brown4\", \"Q2\" = \"burlywood4\", \"Q3\" = \"cadetblue4\", \"Q4\" = \"chartreuse4\")\n\n# Categoria Geral\nquartil_geral <- ggplot(\n  data2 %>% filter(Categoria == \"Geral\"),\n  aes(x = Ano, y = Media_Renda, color = Quartil)) +\n  geom_point(size = 2.5) +\n  scale_color_manual(values = cores_quartil) +\n  labs(x = NULL, y = NULL, title = \"Geral\") +\n  scale_x_continuous(n.breaks = 3) +\n  scale_y_continuous(limits = c(0, 6000), breaks = 3000) +\n  theme_bw() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(hjust = 0.5, size = 12))\n\n# Categorias de sexo e raça\nplots_cat <- list()\nfor (i in seq_along(categorias)) {\n  cat <- categorias[i]\n  \n  plots_cat[[i]] <- ggplot(data2 %>% filter(Categoria == cat), aes(x = Ano, y = Media_Renda, color = Quartil)) +\n    geom_point(size = 1.5, shape = 18) +\n    scale_color_manual(values = cores_quartil) +\n    labs(title = gsub(\"\\\\.\", \" \", cat), x = NULL, y = NULL) +\n    scale_x_continuous(n.breaks = 3) +\n    scale_y_continuous(limits = c(0, 12000), breaks = c(2000, 6000, 10000)) +\n    theme_bw() +\n    theme(\n      plot.title = element_text(hjust = 0.5, size = 10),\n      axis.text.x = if (i >= 4) element_text() else element_blank(),\n      axis.ticks.x = if (i >= 4) element_line() else element_blank(),\n      axis.text.y = if (i %in% c(1, 4)) element_text() else element_blank(),\n      axis.ticks.y = if (i %in% c(1, 4)) element_line() else element_blank()\n    )\n} \n\n# Formatar layout\nquartil_categorias <- (plots_cat[[1]] | plots_cat[[2]] | plots_cat[[3]]) /\n  (plots_cat[[4]] | plots_cat[[5]] | plots_cat[[6]])\n\ngrafico_quartil <- quartil_geral / quartil_categorias +\n  plot_layout(guides = \"collect\")\n```\n\n### Análise Racial e de Gênero\n\n```{r, echo = FALSE, warning = FALSE}\n\ngrafico_categoria1\n```\n\n```{r, echo = FALSE, warning = FALSE}\n\ngrafico_categoria2\n```\n\n### Renda Média dos Quartis por Categoria de Cor e Sexo\n\n```{r, echo = FALSE, warning = FALSE}\n\ngrafico_quartil\n```\n\n## Tabela Descritiva\n\n```{r table, include = FALSE}\n\ndados_df <- dados_df %>%\n  mutate(\n    faixa_renda = case_when(\n      is.na(rendimento_habitual) ~ NA_character_,\n      rendimento_habitual <= 1500 ~ \"Até 1500\",\n      rendimento_habitual <= 3000 ~ \"1501 a 3000\",\n      TRUE ~ \"Acima de 3000\",\n    ),\n    numero_trabalhos = case_when(numero_trabalhos == \"Um\" ~ \"Um\", \n                                 numero_trabalhos %in% c(\"Dois\", \"Três ou mais\") ~ \"Dois ou mais\"\n    ),\n    faixa_renda = factor(faixa_renda, levels = c(\"Até 1500\", \"1501 a 3000\", \"Acima de 3000\")),\n    # regex para remover os parênteses \n    posição_trabalho_principal = str_replace(posição_trabalho_principal, \" \\\\(.*\", \"\")\n  )\n\nvariaveis_tabela <- c(\n  \"cor_raça\" = \"Cor ou Raça\",\n  \"nível_instrução\" = \"Nível de Instrução\",\n  \"numero_trabalhos\" = \"Número de Trabalhos\",\n  \"posição_trabalho_principal\" = \"Posição no Trabalho Principal\",\n  \"horas_trabalhadas_faixa\" = \"Faixa de Horas Trabalhadas\",\n  \"faixa_renda\" = \"Faixa de Renda\"\n)\n\nres3 <- list()\n\nfor (v in names(variaveis_tabela)) {\n  res3[[v]] <- dados_df %>%\n    filter(\n      !is.na(.data[[v]]),\n      !(v == \"cor_raça\" & .data[[v]] == \"Ignorado\")\n    ) %>%\n    group_by(Ano, categoria = .data[[v]]) %>%\n    summarise(peso = sum(peso), .groups = \"drop\") %>%\n    group_by(Ano) %>%\n    mutate(\n      valor = round(100 * peso / sum(peso), 2),\n      categoria = as.factor(categoria),\n      variavel = variaveis_tabela[[v]]  # aplica nome legível\n    ) %>%\n    select(Ano, variavel, categoria, valor)\n}\n\ntabela <- bind_rows(res3)\n\ntabela_final <- pivot_reorder(tabela, Ano, variavel, categoria, valor, c(\"Cor/Raça\", \"Número de Trabalhos\", \"Posição no Trabalho Principal\"), decrescente = TRUE)\n\ndata.table(tabela_final)\n\ntab <- kable(\n  tabela_final[, -1],\n  format = \"html\",\n  digits = 2,\n  align = c(\"l\", rep(\"c\", ncol(tabela_final) - 2)),\n  col.names = c(\"\", setdiff(names(tabela_final), c(\"variavel\", \"categoria\"))),  # remove nome da primeira coluna apenas\n  caption = \"Características Socioeconômicas do Brasil (Porcentagens)\"\n) %>%\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\"),\n    full_width = FALSE,\n    position = \"center\"\n  ) %>%\n  row_spec(0, bold = TRUE) %>%\n  group_rows(\"Cor ou Raça\", 1, 5) %>%\n  group_rows(\"Nível de Instrução\", 6, 12) %>%\n  group_rows(\"Número de Trabalhos\", 13, 14) %>%\n  group_rows(\"Posição no Trabalho Principal\", 15, 20) %>%\n  group_rows(\"Faixa de Horas Trabalhadas\", 21, 25) %>%\n  group_rows(\"Faixa de Renda (R$)\", 26, 28)\n```\n\n```{r, echo = FALSE}\ntab\n```\n\n\\\n","srcMarkdownNoYaml":"\n\n# Análises de Renda no Brasil pela PNAD Contínua Anual (2022-2024)\n\n## Código\n\n### Pacotes Utilizados\n\n```{r packages, echo = TRUE, warning = FALSE, message = FALSE, results = 'hide'}\nlapply(list(\"survey\", \"tidyverse\", \"PNADcIBGE\", \"future\", \"future.apply\", \"progressr\", \"data.table\", \"patchwork\", \"kableExtra\"), function(x) {library(x, character.only = TRUE)})\n\n```\n\n```{r preparation, include = FALSE}\n# plan(multisession, workers = 9)\n# handlers(\"beepr\", \"txtprogressbar\")\n\nanos <- 2022:2024\n\nvariaveis_renomeadas <- c(\n  Ano = \"Ano\",\n  UF = \"UF\",\n  V1008 = \"domicílio\", \n  V1014 = \"entrevista\",\n  V1023 = \"tipo\", \n  #V1028 = \"peso\",\n  V1032 = \"peso\",\n  V2001 = \"número_pessoas\", \n  V2003 = \"indivíduo\", \n  V2005 = \"condição\",\n  V2007 = \"sexo\",\n  V20081 = \"mês_nascimento\", \n  V2009 = \"idade\", \n  V2010 = \"cor_raça\", \n  VD3004 = \"nível_instrução\", \n  VD3005 = \"anos_estudo\", \n  V4009 = \"numero_trabalhos\",\n  V4039 = \"horas_trabalho_principal\",\n  V4040 = \"tempo_trabalho_principal\",\n  V40401 = \"tempo_trabalho_principal.1\",\n  V40402 = \"tempo_trabalho_principal.2\",\n  V40403 = \"tempo_trabalho_principal.3\",\n  VD4008 = \"posição_trabalho_principal\",\n  VD4013 = \"horas_trabalhadas_faixa\",\n  VD4019 = \"rendimento_habitual\",\n  VD4031 = \"horas_trabalhadas\",\n  VD5010 = \"rendimento_habitual_domicilio\"\n)\n```\n\n### Variáveis\n\n```{r variables}\n\nvariaveis <- c(\"Ano\", \"UF\", \"V1008\", \"V1014\", \"V1023\", \"V1032\", \n               \"V2001\", \"V2003\", \"V2005\", \"V2007\", \"V20081\", \"V2009\", \"V2010\", \n               \"VD3004\", \"VD3005\", \n               \"V4009\", \"V4039\", \"V4040\", \"V40401\", \"V40402\", \"V40403\", \"VD4008\", \"VD4013\", \"VD4019\", \"VD4031\", \n               \"VD5010\") \n```\n\n### Funções\n\n```{r function}\ncarregar_dados <- function(ano) {\n  get_pnadc(year = ano, interview = 1, vars = variaveis, defyear = 2024)\n}\n\ncalcula_media <- function(design) {\n  design <- subset(design, cor_raça != \"Ignorado\")\n  \n  design <- update(design, \n                   Renda_dom = rendimento_habitual_domicilio * CO2,\n                   Renda = rendimento_habitual * CO2) \n  \n  renda_ano <- svyby(\n    formula = ~Renda,\n    by = ~interaction(sexo, cor_raça),  \n    design = design,\n    FUN = svymean,\n    na.rm = TRUE\n  )\n  \n  renda_ano <- renda_ano %>%\n    rename(Categoria = `interaction(sexo, cor_raça)`) %>%\n    mutate(Categoria = as.character(Categoria))\n  \n  renda_media <- svymean(x = ~Renda, design = design, na.rm = TRUE)\n  \n  renda_geral <- data.frame(\"Geral\", coef(renda_media), SE(renda_media))\n  colnames(renda_geral) <- colnames(renda_ano)  # garante consistência\n  \n  renda_ano <- rbind(renda_ano, renda_geral)\n  rownames(renda_ano) <- NULL\n  gc()\n  return(renda_ano)\n}\n\ncalcula_quartil <- function(dados) {\n  dado <- dados\n  dado <- subset(dado, !is.na(rendimento_habitual) & !is.na(sexo) & cor_raça != \"Ignorado\")\n  \n  dado <- transform(\n    dado,\n    Renda = rendimento_habitual * CO2, \n    Renda_dom = rendimento_habitual_domicilio * CO2, \n    Categoria = interaction(sexo, cor_raça)\n  )\n  \n  quartis <- svyby(\n    ~Renda,                      \n    ~Categoria,                      \n    dado,                       \n    FUN = svyquantile,            \n    quantiles = c(0.25, 0.5, 0.75)\n  )\n  \n  dado_df <- as.data.frame(dado$variables)\n  dado_df <- left_join(dado_df, quartis, by = \"Categoria\")\n  \n  quartil_geral <- svyquantile(\n    x = ~Renda, \n    design = dado, \n    quantiles = c(0.25, 0.5, 0.75), \n    ci = FALSE\n  )\n  quartil_geral <- as.data.frame(quartil_geral[[\"Renda\"]])\n  \n  renda_media <- svymean(~Renda, dado) \n  \n  dado_df <- dado_df %>%\n    select(Categoria, Renda, Renda.0.25, Renda.0.5, Renda.0.75) %>%\n    mutate(Categoria = as.character(Categoria))\n  \n  media_geral <- data.frame(\n    Categoria = \"Geral\",\n    Renda = as.numeric(renda_media[\"Renda\"]),\n    Renda.0.25 = as.numeric(quartil_geral[1]),\n    Renda.0.5 = as.numeric(quartil_geral[2]),\n    Renda.0.75 = as.numeric(quartil_geral[3]),\n    Quartil = case_when(\n      as.numeric(renda_media[\"Renda\"]) <= as.numeric(quartil_geral[1]) ~ \"Q4\",\n      as.numeric(renda_media[\"Renda\"]) <= as.numeric(quartil_geral[2]) ~ \"Q3\",\n      as.numeric(renda_media[\"Renda\"]) <= as.numeric(quartil_geral[3]) ~ \"Q2\",\n      TRUE ~ \"Q1\"\n    )\n  )\n  \n  dado_df$Categoria <- factor(dado_df$Categoria)\n  \n  dado_df <- dado_df %>%\n    mutate(\n      Quartil = case_when(\n        Renda <= Renda.0.25 ~ \"Q4\",            \n        Renda <= Renda.0.5  ~ \"Q3\",            \n        Renda <= Renda.0.75 ~ \"Q2\",            \n        TRUE                ~ \"Q1\"\n      )\n    )\n  \n  dado_df <- full_join(dado_df, media_geral)\n  \n  dado_df$Renda <- as.numeric(dado_df$Renda)\n  \n  resultado <- dado_df %>%\n    group_by(Categoria, Quartil) %>% \n    summarize(Media_Renda = mean(Renda)) %>%\n    mutate(Quartil_Geral = case_when(\n      Media_Renda <= as.numeric(quartil_geral[1]) ~ \"q4\",            \n      Media_Renda <= as.numeric(quartil_geral[2]) ~ \"q3\",            \n      Media_Renda <= as.numeric(quartil_geral[3]) ~ \"q2\",            \n      TRUE ~ \"q1\"\n    ))\n  \n  return(resultado)\n}\n\n# Função para reordenar categorias condicionalmente após pivot_wider\npivot_reorder <- function(data, ano, variavel, categoria, valor, vars_to_reorder, decrescente = TRUE) {\n  \n  ultimo_ano <- as.character(max(as.numeric(pull(data, {{ano}})), na.rm = TRUE))\n  var_levels <- data %>% pull({{variavel}}) %>% unique()\n  \n  data %>%\n    mutate(\n      {{categoria}} := as.character({{categoria}})\n    ) %>%\n    pivot_wider(\n      names_from = {{ano}},\n      values_from = {{valor}}\n    ) %>%\n    group_by({{variavel}}) %>%\n    mutate(\n      {{categoria}} := if (first({{variavel}}) %in% vars_to_reorder) {\n        fct_reorder(\n          .data[[as.character(rlang::ensym(categoria))]],\n          as.numeric(.data[[ultimo_ano]]),\n          .desc = decrescente\n        )\n      } else {\n        factor(\n          .data[[as.character(rlang::ensym(categoria))]],\n          levels = unique(.data[[as.character(rlang::ensym(categoria))]])\n        )\n      }\n    ) %>%\n    ungroup() %>%\n    arrange(\n      factor(.data[[as.character(rlang::ensym(variavel))]], levels = var_levels),\n      .data[[as.character(rlang::ensym(categoria))]]\n    )\n}\n```\n\n```{r treatment, eval = FALSE, include = FALSE}\n\n# CARREGAR DADOS\n\noptions(future.globals.maxSize = 15e+09)  # Define o limite para 15 GB\n\nwith_progress({\n  p <- progressor(along = anos)\n  \n  dados <- future_lapply(anos, function(ano) {\n    p()\n    carregar_dados(ano)\n  })\n  names(dados) <- paste0(\"ano\", anos)\n})\n\ngc()\n\n# Nomear variáveis de interesse\nfor (i in seq_along(dados)) {\n  for (variavel in names(variaveis_renomeadas)) {\n    names(dados[[i]]$variables)[names(dados[[i]]$variables) == variavel] <- variaveis_renomeadas[[variavel]]\n  }\n}\n\ndados_df <- bind_rows(lapply(dados, function(x) x$variables))\n\ndados_df <- dados_df %>% \n  select(all_of(unname(variaveis_renomeadas))) %>% \n  mutate(ID = paste(Ano, domicílio, indivíduo, sep = \"_\"))\n\n# CATEGORIAS\n\nwith_progress({\n  p <- progressor(along = anos)\n  \n  res1 <- future_lapply(seq_along(anos), function(i) {\n    calcula_media(dados[[i]])\n  })\n})\n\ngc()\n\ndata <- res1 %>%\n  bind_rows(.id = \"Ano\") %>%\n  mutate(Ano = anos[as.integer(Ano)])\n\n# QUARTIS\n\nwith_progress({\n  p <- progressor(along = seq_along(dados))\n  \n  res2 <- future_lapply(seq_along(dados), function(i) {\n    p()\n    calcula_quartil(dados[[i]])\n  })\n})\n\ndata2 <- res2 %>%\n  bind_rows(.id = \"Ano\")%>%\n  mutate(Ano = anos[as.integer(Ano)])\n\ndata$Renda <- round(as.numeric(data$Renda), 2)\ndata2$Media_Renda <- round(data2$Media_Renda, 2)\n```\n\n```{r data, include = FALSE}\n# SALVAR E CARREGAR DADOS\n\n# save(list = ls(), file = \"C:/Users/leona/OneDrive/Imagens/Documentos/GitHub/projetos/dados/saidas/dados_pnad.RData\")\n load(\"C:/Users/leona/OneDrive/Imagens/Documentos/GitHub/projetos/dados/saidas/dados_pnad.RData\")\n\n# write.csv2(dados_df, \"C:/Users/leona/OneDrive/Imagens/Documentos/GitHub/projetos/dados/saidas/dados_pnad.csv\", row.names = FALSE)\n```\n\n## Gráficos\n\n```{r graphics, include = FALSE}\n\ngrafico_categoria1 <- ggplot(data, aes(x = Ano, y = Renda, color = Categoria)) +\n  geom_line(aes(size = ifelse(Categoria == \"Geral\", 2, .6))) +\n  geom_point() +\n  labs(x = NULL, y = \"Renda Média\", title = \"Renda Média no Brasil por Cor e Sexo (1)\") +\n  scale_size_identity() + \n  scale_x_continuous(n.breaks = 3) +\n  theme_minimal()\n\ngrafico_categoria2 <- ggplot(data, aes(x = Ano, y = Renda)) +\n  geom_line() +\n  geom_point() +\n  geom_errorbar(aes(ymin = Renda - se, ymax = Renda + se), width = 0.2) +\n  facet_wrap(~Categoria) +\n  labs(x = NULL, y = \"Renda Média\", title = \"Renda Média no Brasil por Cor e Sexo (2)\") +\n  scale_x_continuous(n.breaks = 3) +\n  theme_bw() + theme(legend.position = \"none\")\n\n\ncategorias <- c(\"Homem.Branca\", \"Homem.Parda\", \"Homem.Preta\", \n                \"Mulher.Branca\", \"Mulher.Parda\", \"Mulher.Preta\")\n\ncores_quartil <- c(\"Q1\" = \"brown4\", \"Q2\" = \"burlywood4\", \"Q3\" = \"cadetblue4\", \"Q4\" = \"chartreuse4\")\n\n# Categoria Geral\nquartil_geral <- ggplot(\n  data2 %>% filter(Categoria == \"Geral\"),\n  aes(x = Ano, y = Media_Renda, color = Quartil)) +\n  geom_point(size = 2.5) +\n  scale_color_manual(values = cores_quartil) +\n  labs(x = NULL, y = NULL, title = \"Geral\") +\n  scale_x_continuous(n.breaks = 3) +\n  scale_y_continuous(limits = c(0, 6000), breaks = 3000) +\n  theme_bw() +\n  theme(legend.position = \"none\",\n        plot.title = element_text(hjust = 0.5, size = 12))\n\n# Categorias de sexo e raça\nplots_cat <- list()\nfor (i in seq_along(categorias)) {\n  cat <- categorias[i]\n  \n  plots_cat[[i]] <- ggplot(data2 %>% filter(Categoria == cat), aes(x = Ano, y = Media_Renda, color = Quartil)) +\n    geom_point(size = 1.5, shape = 18) +\n    scale_color_manual(values = cores_quartil) +\n    labs(title = gsub(\"\\\\.\", \" \", cat), x = NULL, y = NULL) +\n    scale_x_continuous(n.breaks = 3) +\n    scale_y_continuous(limits = c(0, 12000), breaks = c(2000, 6000, 10000)) +\n    theme_bw() +\n    theme(\n      plot.title = element_text(hjust = 0.5, size = 10),\n      axis.text.x = if (i >= 4) element_text() else element_blank(),\n      axis.ticks.x = if (i >= 4) element_line() else element_blank(),\n      axis.text.y = if (i %in% c(1, 4)) element_text() else element_blank(),\n      axis.ticks.y = if (i %in% c(1, 4)) element_line() else element_blank()\n    )\n} \n\n# Formatar layout\nquartil_categorias <- (plots_cat[[1]] | plots_cat[[2]] | plots_cat[[3]]) /\n  (plots_cat[[4]] | plots_cat[[5]] | plots_cat[[6]])\n\ngrafico_quartil <- quartil_geral / quartil_categorias +\n  plot_layout(guides = \"collect\")\n```\n\n### Análise Racial e de Gênero\n\n```{r, echo = FALSE, warning = FALSE}\n\ngrafico_categoria1\n```\n\n```{r, echo = FALSE, warning = FALSE}\n\ngrafico_categoria2\n```\n\n### Renda Média dos Quartis por Categoria de Cor e Sexo\n\n```{r, echo = FALSE, warning = FALSE}\n\ngrafico_quartil\n```\n\n## Tabela Descritiva\n\n```{r table, include = FALSE}\n\ndados_df <- dados_df %>%\n  mutate(\n    faixa_renda = case_when(\n      is.na(rendimento_habitual) ~ NA_character_,\n      rendimento_habitual <= 1500 ~ \"Até 1500\",\n      rendimento_habitual <= 3000 ~ \"1501 a 3000\",\n      TRUE ~ \"Acima de 3000\",\n    ),\n    numero_trabalhos = case_when(numero_trabalhos == \"Um\" ~ \"Um\", \n                                 numero_trabalhos %in% c(\"Dois\", \"Três ou mais\") ~ \"Dois ou mais\"\n    ),\n    faixa_renda = factor(faixa_renda, levels = c(\"Até 1500\", \"1501 a 3000\", \"Acima de 3000\")),\n    # regex para remover os parênteses \n    posição_trabalho_principal = str_replace(posição_trabalho_principal, \" \\\\(.*\", \"\")\n  )\n\nvariaveis_tabela <- c(\n  \"cor_raça\" = \"Cor ou Raça\",\n  \"nível_instrução\" = \"Nível de Instrução\",\n  \"numero_trabalhos\" = \"Número de Trabalhos\",\n  \"posição_trabalho_principal\" = \"Posição no Trabalho Principal\",\n  \"horas_trabalhadas_faixa\" = \"Faixa de Horas Trabalhadas\",\n  \"faixa_renda\" = \"Faixa de Renda\"\n)\n\nres3 <- list()\n\nfor (v in names(variaveis_tabela)) {\n  res3[[v]] <- dados_df %>%\n    filter(\n      !is.na(.data[[v]]),\n      !(v == \"cor_raça\" & .data[[v]] == \"Ignorado\")\n    ) %>%\n    group_by(Ano, categoria = .data[[v]]) %>%\n    summarise(peso = sum(peso), .groups = \"drop\") %>%\n    group_by(Ano) %>%\n    mutate(\n      valor = round(100 * peso / sum(peso), 2),\n      categoria = as.factor(categoria),\n      variavel = variaveis_tabela[[v]]  # aplica nome legível\n    ) %>%\n    select(Ano, variavel, categoria, valor)\n}\n\ntabela <- bind_rows(res3)\n\ntabela_final <- pivot_reorder(tabela, Ano, variavel, categoria, valor, c(\"Cor/Raça\", \"Número de Trabalhos\", \"Posição no Trabalho Principal\"), decrescente = TRUE)\n\ndata.table(tabela_final)\n\ntab <- kable(\n  tabela_final[, -1],\n  format = \"html\",\n  digits = 2,\n  align = c(\"l\", rep(\"c\", ncol(tabela_final) - 2)),\n  col.names = c(\"\", setdiff(names(tabela_final), c(\"variavel\", \"categoria\"))),  # remove nome da primeira coluna apenas\n  caption = \"Características Socioeconômicas do Brasil (Porcentagens)\"\n) %>%\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\"),\n    full_width = FALSE,\n    position = \"center\"\n  ) %>%\n  row_spec(0, bold = TRUE) %>%\n  group_rows(\"Cor ou Raça\", 1, 5) %>%\n  group_rows(\"Nível de Instrução\", 6, 12) %>%\n  group_rows(\"Número de Trabalhos\", 13, 14) %>%\n  group_rows(\"Posição no Trabalho Principal\", 15, 20) %>%\n  group_rows(\"Faixa de Horas Trabalhadas\", 21, 25) %>%\n  group_rows(\"Faixa de Renda (R$)\", 26, 28)\n```\n\n```{r, echo = FALSE}\ntab\n```\n\n\\\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"css":["assets/styles.css"],"number-sections":true,"output-file":"pnad.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"cosmo","font":"lato","title":"PNADc - Renda"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}